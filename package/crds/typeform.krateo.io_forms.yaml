---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: forms.typeform.krateo.io
spec:
  group: typeform.krateo.io
  names:
    categories:
    - crossplane
    - managed
    - krateo
    - typeform
    kind: Form
    listKind: FormList
    plural: forms
    singular: form
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.atProvider.id
      name: ID
      type: string
    - jsonPath: .status.atProvider.displayUrl
      name: DISPLAY_URL
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Form is a typeform API type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A FormSpec defines the desired state of a Form.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: FormParams are the configurable fields of a form instance.
                properties:
                  fields:
                    description: 'Fields: list of form widgets.'
                    items:
                      description: Field describe a form widget.
                      properties:
                        layout:
                          description: 'Layout: allows you to position attachment.'
                          properties:
                            attachment:
                              description: Attachment allows you to display images
                                and videos. Available for welcome and thank you screens,
                                as well as all fields.
                              properties:
                                href:
                                  description: URL for the image or video you want
                                    to display. Images must already exist in your
                                    account
                                  type: string
                                scale:
                                  description: 'Optional parameter for responsively
                                    scaling videos. Valid values: 0.4, 0.6, 0.8, 1'
                                  type: integer
                                type:
                                  description: 'Type of attachment. Valid values:
                                    image, video'
                                  type: string
                              type: object
                            placement:
                              description: 'Position of media for split and float
                                layouts. Valid values: left, right.'
                              type: string
                            type:
                              description: 'Type of layout. Valid values: split, wallpaper,
                                float.'
                              type: string
                          type: object
                        properties:
                          description: 'Properties: specific properties for this field.'
                          properties:
                            allowMultipleSelection:
                              description: 'AllowMultipleSelection: true to allow
                                respondents to select more than one answer choice.
                                Available for types: multiple_choice'
                              type: boolean
                            allowOtherChoice:
                              description: 'AllowOtherChoice: true to include an "Other"
                                option so respondents can enter a different answer
                                choice from those listed; false to limit answer choices
                                to those listed. Available for types: multiple_choice'
                              type: boolean
                            alphabeticalOrder:
                              description: 'AlphabeticalOrder: true if question should
                                list dropdown answer choices in alphabetical order;
                                false if question should list dropdown answer choices
                                in the order they''re listed in the "choices" array.
                                Available for types: dropdown.'
                              type: boolean
                            choices:
                              description: 'Choices: answer choices. Available for
                                types: dropdown, multiple_choice'
                              items:
                                type: string
                              type: array
                            description:
                              description: 'Description: Question or instruction to
                                display for the field.'
                              type: string
                            shape:
                              description: 'Shape: Shape to display on the scale''s
                                steps. Valid values: cat, circle, cloud, crown, dog,
                                droplet, flag, heart, lightbulb, pencil, skull, star,
                                thunderbolt, tick, trophy, up, user. Default: star
                                Available for types: rating types.'
                              type: string
                            steps:
                              description: 'Steps: Number of steps in the scale''s
                                range. Minimum is 5 and maximum is 11. Available fortypes:
                                rating.'
                              type: integer
                          type: object
                        title:
                          description: 'Title: Unique name you assign to the field
                            on this form.'
                          type: string
                        type:
                          description: 'Type: the widget type. Valid values: dropdown,
                            long_text, multiple_choice, rating.'
                          type: string
                        validations:
                          description: 'Validations: specific properties for this
                            field.'
                          properties:
                            maxLength:
                              description: 'MaxLength: maximum number of characters
                                allowed in the answer. Available for types: long_text,
                                short_text.'
                              type: integer
                            maxSelection:
                              description: 'MaxSelection: maximum selections allowed
                                in the answer, must be a positive integer. Available
                                for types: multiple_choice.'
                              type: integer
                            minSelection:
                              description: 'MinSelection: minimum selections allowed
                                in the answer, must be a positive integer. Available
                                for types: multiple_choice'
                              type: integer
                            required:
                              description: 'Required: true if respondents must provide
                                an answer. Otherwise, false. Available for types:
                                dropdown, long_text, multiple_choice, rating.'
                              type: boolean
                          type: object
                      required:
                      - title
                      - type
                      type: object
                    type: array
                  title:
                    description: 'Title: to use for this form.'
                    type: string
                required:
                - title
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A FormStatus represents the observed state of a Form.
            properties:
              atProvider:
                description: FormObservation are the observable fields of a Form.
                properties:
                  displayUrl:
                    type: string
                  id:
                    type: string
                required:
                - displayUrl
                - id
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
